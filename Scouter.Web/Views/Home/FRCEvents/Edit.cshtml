@model Scouter.Web.ViewModels.FRCEventViewModel

@{
    ViewBag.Title = "Event";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles {
    <style>
        #success-msg-container,
        #fail-msg-container,
        #delete-msg-container,
        #img-fail-msg-container {
            display: none;
        }
    </style>
}

@section scripts {
    <script>
        $(function ()
        {
            var eventDataForm = $("#event-data-form")[0];
            var progressBar = $('#progress-bar');

            //
            // CLIENT SIDE MODEL
            //
            var Event = function ()
            {
                this.id = ko.observable("@Model.Event.Id");
                this.name = ko.observable("@Model.Event.Name");
                this.beginDate = ko.observable("@Model.Event.BeginDate");
                this.finishDate = ko.observable("@Model.Event.FinishDate");
                this.venue = ko.observable("@Model.Event.Venue");
                this.city = ko.observable("@Model.Event.City");
                this.state = ko.observable("@Model.Event.State");
                this.type = ko.observable("@Model.Event.Type");
                this.imageName = ko.observable("@Model.Event.ImageName");
                this.createdOn = ko.observable("@Model.Event.CreatedOn");
                this.modifiedOn = ko.observable("@Model.Event.ModifiedOn");
            };

            //
            // CLIENT SIDE VIEWMODEL
            //
            var ViewModel = function (event)
            {
                this.model = event;

                this.errorMessage = ko.observable();

                this.hideProgressBar = function (showAfterHideFunc)
                {
                    progressBar.fadeOut(function ()
                    {
                        showAfterHideFunc();
                    });
                };

                this.showError = function (error)
                {
                    var resetUI = function ()
                    {
                        $('#command-buttons').fadeIn();
                        $('#fail-msg-container').fadeIn();
                    };

                    vm.hideProgressBar(resetUI);

                    if (error.statusText)
                    {
                        vm.errorMessage(error.statusText);
                    }

                    if (error.responseText)
                    {
                        var
                            msg = JSON.parse(error.responseText),
                            keys = _.keys(msg),
                            txt = '';

                        _.each(keys, function (key)
                        {
                            txt += msg[key] + ' ';
                        });
                        vm.errorMessage(txt);
                    }
                };

                this.showSuccess = function ()
                {
                    var resetUI = function ()
                    {
                        $('#command-buttons').fadeIn();
                        $('#fail-msg-container').fadeOut();
                        $('#delete-msg-container').fadeOut();
                        $('#success-msg-container').fadeIn();
                    };

                    vm.hideProgressBar(resetUI);

                    var fadeOut = function ()
                    {
                        $('#success-msg-container').fadeOut()
                    };

                    _.delay(fadeOut, 5000);
                };

                this.save = function ()
                {

                    var validationUtility = new ValidationUtility();

                    if (validationUtility.validate('event-data-form'))
                    {
                        $('#command-buttons').hide();
                        $('#progress-bar').fadeIn();

                        var event = ko.toJS(this.model); // turn the ko model into a plain javascript model which will be sent back to the server

                        frcEventsDataService.save(event).done(function (response)
                        {
                            if (response.id)
                            {
                                vm.model.id(response.id);
                            }
                            vm.showSuccess();
                        }).fail(function (error)
                        {
                            vm.showError(error);
                        });
                    }
                }

                this.back = function ()
                {
                    navigate('..');
                }

                this.requestDelConfirm = function ()
                {
                    $('#del-confirm').model();
                }

                this.del = function ()
                {
                    var team = ko.toJS(this.model);
                    teamsDataService.del(team).done(function (response)
                    {
                        this.back();
                    }).fail(function (error)
                    {
                        vm.showError(error);
                    }).always(function ()
                    {
                        $('#del-confirm').model('hide');
                    });

                }
            };

            var vm = new ViewModel(new Event());
            ko.applyBindings(vm);

            H5F.setup([eventDataForm], {
                validClass: "valid",
                invalidClass: "invalid",
                requiredClass: "required"
            });
        });
    </script>
}

<div class="row">
    <div class="col-md-12">
        <form id="event-data-form">
            <div class="row">
                <div class="col-md-2 col-xs-3">
                    Event Name: 
                </div>
                <div class="col-md-7 col-xs-7">
                <input id="name" name="name"
                        data-bind="value: model.name"
                        title="Event Name"
                        type="text"
                        class="full"
                        data-role="validate"
                        data-content="The Event Name is Required"
                        placeholder="Event Name" />
                </div>
            </div>
            <br/>
            <div class="row">
                <div class="col-md-2 col-xs-3">
                    Event City:
                </div>
                <div class="col-md-7 col-xs-7">
                    <input id="city" name="city"
                           data-bind="value: model.city "
                           title="Event City"
                           type="text"
                           class="full"
                           data-role="validate"
                           data-content="The Event City is Required"
                           placeholder="Event City" />
                </div>
            </div>
            <br/>
            <div class="row">
                <div class="col-md-2 col-xs-3">
                    Event State:
                </div>
                <div class="col-md-7 col-xs-7">
                    <input id="state" name="state"
                           data-bind="value: model.state "
                           title="Event City"
                           type="text"
                           class="full"
                           data-role="validate"
                           data-content="The Event State is Required"
                           placeholder="Event State"/>
                </div>
            </div>
            <br/>
            <div class="row">
                <div class="col-md-2 col-xs-3">
                    Begine Date:
                </div>
                <div class="col-md-7 col-xs-7">
                    <input id="beginDate" name="beginDate"
                           data-bind="value: model.beginDate "
                           title="Event City"
                           type="date"
                           class="full"
                           data-role="validate"
                           data-content="The Event Begin Date is Required"
                           placeholder="Begin Date"/>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2 col-xs-3">
                    Finish Date:
                </div>
                <div class="col-md-7 col-xs-7">
                    <input id="finishDate" name="finishDate"
                           data-bind="value: model.finishDate "
                           title="Finish Date"
                           type="date"
                           class="full"
                           data-role="validate"
                           data-content="The Event Finish Date is Required"
                           placeholder="Finish Date" />
                </div>
            </div>
            <br />

            <!---->
            <!-- Message Containers======================================================================================= -->
            <!---->

            <div class="row">
                <div id="success-msg-container" class="col-md-11 alert alert-success">
                    <button type="button" class="close" data-dismiss="alert">x</button>
                    <h4>Changes Saved</h4>
                    <p>
                        The team information is saved.
                    </p>
                </div>
            </div>

            <div class="row">
                <div id="fail-msg-container" class="col-md11 alert alert-danger">
                    <button type="button" class="close" data-dismiss="alert">x</button>
                    <h4>Error</h4>
                    <p>
                        Oops, something bad happened! This is what the server had to say about it:
                    </p>
                    <p data-bind="text: errorMessage"/>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div id="progress-bar" class="progress progress-striped active fade">
            <div class="bar" style="width: 100%;"></div>
        </div>
        <div id="command-buttons" class="pull-right">
            <button data-bind="click: save" type="button" class="btn btn-primary btn-lg cmd">Save</button>
            <button data-bind="click: back" type="button" class="btn btn-danger btn-lg cmd">Cancel</button>
        </div>
    </div>
</div>