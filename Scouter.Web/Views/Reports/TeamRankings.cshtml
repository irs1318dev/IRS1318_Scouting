@model Scouter.Web.ViewModels.ReportViewModel

@{
    ViewBag.Title = "Team Rankings";
    Layout = "~/Views/Shared/_LayoutTeams.cshtml";
}

@section scripts {
<script>
    $(function () {
        //////////////////////////////////////////////////////////////////
        // KNOCKOUT ID HANDLING
        ko.bindingHandlers.uniqueId = {
            // append a knockout data item (valueAccessor) to the element id
            init: function (element, valueAccessor) {
                var value = valueAccessor();
                element.id = element.id + value;
            }
        };

        //////////////////////////////////////////////////////////////////
        // VIEWMODEL
        var ViewModel = function (model) {
            var self = this;
            var model = ko.observableArray(@Html.Raw(Model.TeamRankingsJSON));
            var hold = ko.observableArray();

            self.currentEventName = ko.observable("@Model.CurrentEventName");

            self.hide = function (team) {
                if (hold.indexOf(team) > -1) {
                    hold.remove(team);
                    $('#r' + team.team).css('background-color', 'white');
                    if (hold().length === 0) {
                        $('#btnRestore').removeClass('btn-success');
                        $('#btnRestore').addClass('invisible');
                    }
                }
                else {
                    hold.push(team);
                    $('#r' + team.team).css('background-color', 'grey');
                    $('#btnRestore').removeClass('invisible');
                    $('#btnRestore').addClass('btn-success');
                }
            }.bind(self);

            self.restore = function () {
                for (var i = 0; i < hold().length; i++) {
                    $('#r' + hold()[i].team).css('background-color', '');
                }
                hold.removeAll();
                $('#btnRestore').removeClass('btn-success');
                $('#btnRestore').addClass('invisible');
            }.bind(self);

            var by = ko.observable(1)
            self.byClick = function (b) {
                if (b === 0) {
                    $('#btnTeam').addClass('btn-success');
                    $('#btnHelper').removeClass('btn-success');
                    $('#btnOffense1').removeClass('btn-success');
                    $('#btnOffense2').removeClass('btn-success');
                }
                else if (b === 1) {
                    $('#btnTeam').removeClass('btn-success');
                    $('#btnHelper').addClass('btn-success');
                    $('#btnOffense1').removeClass('btn-success');
                    $('#btnOffense2').removeClass('btn-success');
                }
                else if (b === 2) {
                    $('#btnTeam').removeClass('btn-success');
                    $('#btnHelper').removeClass('btn-success');
                    $('#btnOffense1').addClass('btn-success');
                    $('#btnOffense2').removeClass('btn-success');
                }
                else {
                    $('#btnTeam').removeClass('btn-success');
                    $('#btnHelper').removeClass('btn-success');
                    $('#btnOffense1').removeClass('btn-success');
                    $('#btnOffense2').addClass('btn-success');
                }
                by(b);
            }

            self.sortedModel = ko.computed(function () {
                if (by() === 0)
                    return model.sort(
                        function (left, right) {
                            var leftTeam = left.team;
                            var rightTeam = right.team;
                            return left.name === leftTeam ? 0 : (leftTeam < rightTeam ? -1 : 1);
                    });
                else if (by() === 1)
                return model.sort(
                    function (left, right) {
                        var totalLeft = left.helperRank;
                        var totalRight = right.helperRank;
                        return left.score === totalLeft ? 0 : (totalRight > totalLeft ? -1 : 1);
                    });
                else if (by() === 2)
                    return model.sort(
                        function (left, right) {
                            var totalLeft = left.offense1Rank;
                            var totalRight = right.offense1Rank;
                            return left.score === totalLeft ? 0 : (totalRight > totalLeft ? -1 : 1);
                        });
                else
                    return model.sort(
                        function (left, right) {
                            var totalLeft = left.offense2Rank;
                            var totalRight = right.offense2Rank;
                            return left.score === totalLeft ? 0 : (totalRight > totalLeft ? -1 : 1);
                        });
            });
         }

        var vm = new ViewModel();
        ko.applyBindings(vm);
        });
</script>
}

<style>
    .MajorGreen {
        color: green;
        font-weight: bold;
    }
    .MinorGreen {
        color: green;
        font-weight: lighter;
    }
    .MajorBlack {
        color: black;
        font-weight: bold;
    }
    .MinorBlack {
        color: black;
        font-weight: lighter;
    }
    .MajorBlue {
        color: blue;
        font-weight: bold;
    }
    .MinorBlue {
        color: blue;
        font-weight: lighter;
    }
</style>

<div class="page-header">
    <label data-bind="text: 'Team Rankings for ' + currentEventName()"></label><br />
</div>

<div class="container">
    <div class="row" style="border-bottom: 1px solid black">
        <div class="col-sm-1">
            <button id="btnRestore" class="invisible" data-bind="click: restore">Restore</button>
        </div>
        <div class="col-sm-2">
            <button id="btnTeam" class="btn-sm btn-success" data-bind="click: byClick(0)">Team</button>
        </div>
        <div class="col-sm-1">
            <button id="btnHelper" class="btn-sm" data-bind="click: byClick(1)">Helper Rank</button>
        </div>
        <div class="col-sm-1 MinorGreen">
            Inbound / Miss
        </div>
        <div class="col-sm-1 MinorGreen">
            Passing
        </div>
        <div class="col-sm-1 MinorGreen">
            Defense
        </div>
        <div class="col-sm-1">
            <button id="btnOffense1" class="btn-sm btn-success" data-bind="click: byClick(2)">Offense1 Rank</button>
        </div>
        <div class="col-sm-1 MinorBlack">
            Truss Pass / Catch
        </div>
        <div class="col-sm-1">
            <button id="btnOffense2" class="btn-sm" data-bind="click: byClick(3)">Offense2 Rank</button>
        </div>
        <div class="col-sm-1 MinorBlue">
            Goal / Miss
        </div>
        <div class="col-sm-1 MinorBlue">
            Goals<br />Hi / Lo
        </div>
    </div>
    <div data-bind="template: { name: 'list-template', foreach: sortedModel }"></div>
</div>
<script type="text/html" id="list-template">
    <div id="r" data-bind="uniqueId: team" class="row" style="border-bottom: 1px solid black">
        <div class="col-sm-1">
            <button id="btnHide" class="btn-sm" data-bind="click: $parent.hide">Not Avail</button>
        </div>
        <div class="col-sm-2">
            <a data-bind="attr: { href: '/Reports/Index//' + team }">
                <label data-bind="text: 'Team ' + team"></label>
            </a>
        </div>
        <div class="col-sm-1">
            <label class="MajorGreen" data-bind="text: helperRank"></label>
        </div>
        <div class="col-sm-1">
            <label class="MinorGreen" data-bind="text: teleopOffensiveInboundCountRatio"></label>
        </div>
        <div class="col-sm-1">
            <label class="MinorGreen" data-bind="text: teleopPassesCount"></label>
        </div>
        <div class="col-sm-1">
            <label class="MinorGreen" data-bind="text: teleopDefensiveCount"></label>
        </div>
        <div class="col-sm-1">
            <label class="MajorBlack" data-bind="text: offense1Rank"></label>
        </div>
        <div class="col-sm-1">
            <label class="MinorBlack" data-bind="text: teleopTrussCount"></label>/<label class="MinorBlack" data-bind="text: teleopTrussCatchCount"></label>
        </div>
        <div class="col-sm-1">
            <label class="MajorBlue" data-bind="text: offense2Rank"></label>
        </div>
        <div class="col-sm-1">
            <label class="MinorBlue" data-bind="text: teleopOffensiveCountRatio"></label>
        </div>
        <div class="col-sm-1">
            <label class="MinorBlue" data-bind="text: teleopOffensiveHiLoRatio"></label>
        </div>
        <div class="col-sm-2">
            <!--<img data-bind="attr: { src: '/images/teams/' + picture }" class="img-responsive" width="300" />-->
        </div>
    </div>
</script>